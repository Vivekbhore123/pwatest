{"version":3,"sources":["List.js","Form.js","Ema.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["List","listOfFriends","className","scope","map","val","index","name","dob","mail","mobile","Form","llst","setLlst","setFix","fix","useState","setName","setMail","setDob","setMobile","setListOfFriends","useEffect","Axios","get","then","response","data","catch","console","log","src","alt","id","type","placeholder","value","onChange","event","target","required","pattern","minLength","maxLength","onClick","alert","no","length","notwo","res","replace","dobt","year","Number","substr","month","day","today","Date","age","getFullYear","getMonth","getDate","mob","match","ValidateEmail","isInteger","post","_id","Ema","App","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.0568a0e6.chunk.js","sourcesContent":["import React from 'react'\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nfunction List({ listOfFriends }) {\r\n  return (\r\n    <div>\r\n      <table className=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <th scope=\"col\">Name</th>\r\n            <th scope=\"col\">Date of birth</th>\r\n            <th scope=\"col\">Mail</th>\r\n            <th scope=\"col\">Mobile</th>\r\n          </tr>\r\n        </thead>\r\n      </table>\r\n      {listOfFriends.map((val,index) => {\r\n        return (\r\n          <table className=\"table\" key={index}>\r\n            <tbody>\r\n              <tr>\r\n                <td>{val.name}</td>\r\n                <td>{val.dob}</td>\r\n                <td>{val.mail}</td>\r\n                <td>{val.mobile}</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default List\r\n\r\n\r\n","import React,{useState,useEffect} from 'react'\r\nimport Axios from \"axios\";\r\n\r\n\r\nconst Form = ({ llst, setLlst, setFix, fix }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [mail, setMail] = useState(\"\");\r\n  const [dob, setDob] = useState(\"\");\r\n  const [mobile, setMobile] = useState(\"\");\r\n  const [listOfFriends, setListOfFriends] = useState([]);\r\n\r\n  const addFriend = () => {\r\n    if(name===\"\" || mail===\"\" || dob===\"\" || mobile===\"\")\r\n    {\r\n      alert(\"fill all fields\")\r\n    }\r\n    else\r\n    {\r\n      // console.log(dob); \r\n\r\n      var strp = mobile;\r\n      var no = strp.length;\r\n\r\n      var strptwo = name;\r\n      var notwo = strptwo.length;\r\n\r\n      function ValidateEmail(mail) {\r\n        var mailformat = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\r\n        if (mail.match(mailformat)) {\r\n          //  alert(\"Valid email address!\");\r\n          return true;\r\n        } else {\r\n          alert(\"You have entered an invalid email address!\");\r\n          return false;\r\n        }\r\n      }\r\n\r\n      var str = dob;\r\n      var res = str.replace(\"-\", \"\");\r\n      res = res.replace(\"-\", \"\");\r\n      //  alert(res.trim());\r\n      var dobt = res;\r\n      var year = Number(dobt.substr(0, 4));\r\n      var month = Number(dobt.substr(4, 2)) - 1;\r\n      var day = Number(dobt.substr(6, 2));\r\n      var today = new Date();\r\n      var age = today.getFullYear() - year;\r\n      if (\r\n        today.getMonth() < month ||\r\n        (today.getMonth() === month && today.getDate() < day)\r\n      ) {\r\n        age--;\r\n      }\r\n\r\n      // alert(age);\r\n      if (age >= 18) {\r\n        const mob = Number(mobile);\r\n        if (ValidateEmail(mail)) {\r\n          if (no === 10 && Number.isInteger(mob)) {\r\n            if (notwo >= 3) {\r\n              Axios.post(\"https://vivekappmern.herokuapp.com/addfriend\", {\r\n                name: name,\r\n                mail: mail,\r\n                dob: dob,\r\n                mobile: mobile,\r\n              })\r\n                .then((response) => {\r\n                  // console.log(response);\r\n                  setListOfFriends([\r\n                    ...listOfFriends,\r\n                    {\r\n                      _id: response.data.id,\r\n                      name: name,\r\n                      mail: mail,\r\n                      dob: dob,\r\n                      mobile: mobile,\r\n                    },\r\n                  ]);\r\n                  setLlst(listOfFriends);\r\n                  setName(\"\");\r\n                  setMail(\"\");\r\n                  setDob(\"\");\r\n                  setMobile(\"\");\r\n                })\r\n                .then(() => {\r\n                  setFix(false);\r\n                });\r\n            } else {\r\n              alert(\"name should contain at least 3 characters\");\r\n            }\r\n          } else {\r\n            alert(\"invalid mobile no\");\r\n          }\r\n        }\r\n      } else {\r\n        alert(\"age must be greater than 18\");\r\n      }\r\n    }\r\n   \r\n  };\r\n\r\n  useEffect(() => {\r\n    Axios.get(\"https://vivekappmern.herokuapp.com/read\")\r\n      .then((response) => {\r\n        setListOfFriends(response.data);\r\n        setLlst(listOfFriends);\r\n      })\r\n      .catch(() => {\r\n        console.log(\"ERR\");\r\n      });\r\n      \r\n  }, [listOfFriends,setLlst]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"container register\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-3 register-left\">\r\n            <img src=\"https://image.ibb.co/n7oTvU/logo_white.png\" alt=\"\" />\r\n            <h3>Assignment for internship \"with validation update\"</h3>\r\n            <p>\r\n              Fill the details. You will be redirected to new page once you\r\n              submit the form and name will appear in list. A mail will be sent\r\n              to you for confirmation\r\n            </p>\r\n          </div>\r\n          <div className=\"col-md-9 register-right\">\r\n            <div className=\"tab-content\" id=\"myTabContent\">\r\n              <div className=\"tab-pane fade show active\" id=\"home\">\r\n                <h3 className=\"register-heading\">made by vivek bhore</h3>\r\n                <div className=\"row register-form\">\r\n                  <div className=\"col-md-6\">\r\n                    <div className=\"form-group\">\r\n                      <label>Full Name</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Full Name *\"\r\n                        value={name}\r\n                        onChange={(event) => {\r\n                          setName(event.target.value);\r\n                        }}\r\n                        required\r\n                      />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <label>Date of birth</label>\r\n                      <input\r\n                        type=\"date\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Date of birth *\"\r\n                        value={dob}\r\n                        onChange={(event) => {\r\n                          setDob(event.target.value);\r\n                        }}\r\n                        required\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                    <div className=\"form-group\">\r\n                      <label>Mail</label>\r\n                      <input\r\n                        type=\"email\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Your Email *\"\r\n                        pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}$\"\r\n                        value={mail}\r\n                        onChange={(event) => {\r\n                          setMail(event.target.value);\r\n                        }}\r\n                        required\r\n                      />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <label>Mobile</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        minLength=\"10\"\r\n                        maxLength=\"10\"\r\n                        name=\"txtEmpPhone\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Your Phone 10 digit *\"\r\n                        value={mobile}\r\n                        onChange={(event) => {\r\n                          setMobile(event.target.value);\r\n                        }}\r\n                        required\r\n                      />\r\n                    </div>\r\n\r\n                    <input\r\n                      type=\"submit\"\r\n                      className=\"btnRegister\"\r\n                      value=\"Submit\"\r\n                      onClick={addFriend}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n \r\n\r\nexport default Form\r\n","import React from \"react\";\r\nimport Axios from \"axios\";\r\n\r\n\r\nexport default function Ema({ listOfFriends }) {\r\n\r\n\r\n   Axios.post(\"https://vivekappmern.herokuapp.com/mail\", {\r\n     name: listOfFriends[listOfFriends.length - 1].name,\r\n     mail: listOfFriends[listOfFriends.length - 1].mail,\r\n     dob: listOfFriends[listOfFriends.length - 1].dob,\r\n     mobile: listOfFriends[listOfFriends.length - 1].mobile,\r\n   }).then((response) => {\r\n     console.log(response.data);\r\n   });\r\n  \r\n   return (\r\n  <div>\r\n      <h5>email has been sent you at </h5>\r\n      <h5>{listOfFriends[listOfFriends.length - 1].mail}</h5>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\n","import { useState } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport \"./App.css\";\nimport List from \"./List\";\nimport Form from \"./Form\";\nimport Ema from \"./Ema\";\nfunction App() {\n  const [llst, setLlst] = useState([]);\n  const [fix, setFix] = useState(true);\n\n  return (\n    <div>\n      {fix ? (\n        <Form llst={llst} setLlst={setLlst} setFix={setFix} fix={fix} />\n      ) : (\n        <div>\n          <Ema listOfFriends={llst} />\n          <List listOfFriends={llst} />\n        </div>\n      )}\n    \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}